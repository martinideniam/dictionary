$themes: (
  light: (
    colorBackground: #ffffff,
    colorInputBackground: #f4f4f4,
    colorMainText: #2d2d2d,
    colorSubText: #757575,
    colorToggleLabel: #757575,
    colorToggleBall: #ffffff,
    colorHiddenBox: #ffffff,
    colorHiddenBoxShadow: rgba(0, 0, 0, 0.1),
    colorMoon: #757575,
    colorHR: #e9e9e9,
    colorHRdark: #3a3a3a,
    colorTextPurple: #a445ed,
    colorBulletsPurple: #8f19e8,
    colorOrange: #ff5252,
  ),
  dark: (
    colorBackground: #050505,
    colorInputBackground: #1f1f1f,
    colorMainText: #ffffff,
    colorSubText: #757575,
    colorToggleLabel: #a445ed,
    colorToggleBall: #ffffff,
    colorHiddenBox: #1f1f1f,
    colorHiddenBoxShadow: #a445ed,
    colorMoon: #a445ed,
    colorHR: #e9e9e9,
    colorHRdark: #3a3a3a,
    colorTextPurple: #a445ed,
    colorBulletsPurple: #8f19e8,
    colorOrange: #ff5252,
  ),
);

@mixin themify($themes) {
  @each $theme, $map in $themes {
    .theme-#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function themed($key) {
  @return map-get($theme-map, $key);
}

// this particular solution was taken from Veronika Jaghinyan's article on Medium
// https://betterprogramming.pub/a-complete-guide-to-implementing-dark-mode-in-react-47af893b22eb
